---
title: Make A Shortcut for Anything in RStudio with shrtcts
author: Garrick Aden-Buie
date: '2020-05-02'
slug: shrtcts
categories:
  - Blog
tags:
  - RStudio
  - R
  - R Package
  - Addin
  - Shortcuts
description: Quickly turn any R function or code into an RStudio addin with {shrtcts}
rmd_source: 'https://github.com/gadenbuie/garrickadenbuie-com/blob/main/content/blog/2020/2020-05-02-make-a-shortcut-for-anything-in-rstudio-with-shtrcts.Rmd'
keywords: rstats
editor_options:
  chunk_output_type: console
---

<!-- Links -->

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = TRUE, warning = FALSE, message = FALSE, eval=FALSE,
  fig.width = 9, fig.height = 10
)
options(htmltools.dir.version = TRUE)
```

[shrtcts]: https://github.com/gadenbuie/shrtcts
[rstudio-keyboard-shortcuts]: https://support.rstudio.com/hc/en-us/articles/200711853-Keyboard-Shortcuts
[rstudio-customize-shortcuts]: https://support.rstudio.com/hc/en-us/articles/206382178-Customizing-Keyboard-Shortcuts
[rstudio-addins]: https://rstudio.github.io/rstudioaddins/
[addinslist]: https://github.com/daattali/addinslist
[rsam]: https://github.com/yonicd/rsam

<!-- https://buttons.github.io/ -->
<a class="github-button" href="https://github.com/gadenbuie" data-show-count="true" aria-label="Follow @gadenbuie on GitHub">Follow @gadenbuie</a>&nbsp;
<a class="github-button" href="https://github.com/gadenbuie/shrtcts" data-icon="octicon-star" data-show-count="true" aria-label="Star gadenbuie/shrtcts on GitHub">Star</a>&nbsp;
<a class="github-button" href="https://github.com/gadenbuie/shrtcts/fork" data-icon="octicon-repo-forked" data-show-count="true" aria-label="Fork gadenbuie/shrtcts on GitHub">Fork</a>

RStudio's many [keyboard shortcuts][rstudio-keyboard-shortcuts]
take some time to learn but can save tons of typing in the long run.
[RStudio addins][rstudio-addins]
extend RStudio's interface with small apps and actions,
and you can
[assign customized keyboard shortcuts][rstudio-customize-shortcuts]
to trigger any addin you have installed quickly from the keyboard.

Installing an addin isn't hard ---
and if you're looking for new addins,
Dean Attali's [addinslist] is the place to go.
But addins are installed via R packages,
so if you want to create your own addin,
you'll have to create a new R package to store your addin.
And if you have to create a new R package,
you'll need to think of a name for your R package.
But naming is hard,
and all the good words starting with or involving
the letter R
are already taken.

What if all you want to do is run
a function from an installed package
or a short bit of R code that does something useful
and that makes your workflow just a little smoother?

What if you want that function to run
whenever you press
<kbd>Control</kbd> + <kbd>Alt</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd>?

It seems like there should be an easier way to do this
than to create an R package.

(_Have I convinced you that you also have the same problem I do,
or am I the only one?_)

## Update September 14, 2020

<span class="pkg">shrtcts</span> now has [a dedicated site](https://pkg.garrickadenbuie.com/shrtcts),
and a slightly different syntax than the first version presented below.
You can now write your [shortcut functions in R files](https://pkg.garrickadenbuie.com/shrtcts/articles/shrtcts.html#quick-intro)
and use <span class="pkg">roxygen2</span> documentation strings to [configure your shortcuts](https://pkg.garrickadenbuie.com/shrtcts/articles/shrtcts.html#shrtcts-r-format).
You can also [set keyboard shortcuts](https://pkg.garrickadenbuie.com/shrtcts/articles/shrtcts.html#declare-keyboard-shortcuts-in--shrtcts-r)
for your <span class="pkg">shrtcts</span> shortcuts directly in the configuration R script.

## Introducing shrtcts

<span class="pkg">[shrtcts]</span> is a small package I've put together
with the goal of making it easier
to register and manage RStudio addins
without having to maintain an R package.

### Getting started

First, **install shrtcts**.

```{r how-to-install, eval=FALSE}
remotes::install_github("gadenbuie/shrtcts")
```

Then, **create a YAML file** called `.shrtcts.yaml`
and store it in your home directory[^home]
or in a directory called `.config` in your home directory.

<span class="pkg">^home]: You can find you home directory quickly using `fs::path_home_r()` or `fs::path_home()`. [shrtcts</span> will look in either location.

This YAML file holds your shortcuts as a YAML list.
Each item looks a lot like the
[addins.dcf](https://rstudio.github.io/rstudioaddins/#registering-addins)
file that is used to register addins in R packages.
The only difference is that the `Binding` entry
can be any arbitrary R function or code.

```yaml
- Name: Say Something Nice
  Description: A demo of cool things
  Binding: praise::praise
  Interactive: true
```

I'm calling this shortcut
_Say Something Nice_
and whenever it is triggered it calls
`praise()` from the
<span class="pkg">[praise](https://github.com/rladies/praise)</span> package.

To **install your shortcut**,
run `add_rstudio_addin()` from <span class="pkg">shrtcts</span>
and restart your R session.

```{r eval=FALSE}
shrtcts::add_rstudio_shortcuts()
rstudioapi::restartSession()
```

You can restart your R session by clicking _Session_ > _Restart R_.
Now you should now be able to find
the _Say Something Nice_ addin in your addins list!

<img alt="Our first RStudio shortcut!"
     title="Our first RStudio shortcut!"
     src="shrtcts-addin-nice.png"
     width="330px"
     style="max-width: 100%; margin-left: auto; margin-right: auto;" />

### Shortcut, meet keyboard

#### Assigning keyboard shortcuts to your addin shortcuts

Once you've installed your shortcut addins,
you can then assign a keyboard shortcut to run your addin.
Select _Modify Keyboard Shortcuts..._
from the _Tools_ menu

<img alt="RStudio 'Modify Keyboard Shortcuts' item in the 'Tools' menu"
     title="RStudio 'Modify Keyboard Shortcuts' item in the 'Tools' menu"
     src="rstudio-menu-modify-shortcuts.png"
     width="360px"
     style="max-width: 100%; margin-left: auto; margin-right: auto;" />

and then search for your shortcut.
Click on the blank space in the _Shortcut_ column
and press the keys that will be the your new shortcut.
Here, I'm assigning the _Say Something Nice_ addin to
<kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>P</kbd>.

<img alt="Setting the keyboard shortcut for the 'Say Something Nice' addin"
     title="Setting the keyboard shortcut for the 'Say Something Nice' addin"
     src="rstudio-keyboard-shortcut-menu.png"
     width="800px"
     style="max-width: 100%; margin-left: auto; margin-right: auto;" />

After setting the shortcut,
I usually check to make sure my new keyboard shortcut
doesn't collide with a previously installed shortcut
by clearing the search and sorting by the shortcut column.

#### A few details to keep in mind about keyboard shortcuts

There are a two things to keep in mind about using keyboard shortcuts
with your <span class="pkg">shrtcts</span> shortcuts.

First, if you re-install or update <span class="pkg">shrtcts</span>,
your currently existing keyboard shortcuts should survive the transition.
Make sure that you run `add_rstudio_addins()` again after updating,
and make sure that you re-start your R session.

Second, the order of your shortcuts in your `.shrtcts.yaml` file matters,
unless you explicitly set the `id` entry to a number between 1 and 100.
This means that it's a good idea to set the `id`
of shortcuts that you're going to use with keyboard shortcuts.


```yaml
- Name: Say Something Nice
  Description: A demo of cool things
  Binding: praise::praise
  id: 1
  Interactive: true
```

### Adding more shortcuts

To add more shortcuts,
continue adding entries in your `.shrtcts.yaml` file.
If you don't want to run `add_rstudio_shortcuts()`
every time you update your shortcuts,
you can add the following line in your `~/.Rprofile`[^rprofile].

[^rprofile]: A quick way to edit this file is by calling `usethis::edit_r_profile()`.

```{r eval=FALSE}
if (interactive() & requireNamespace("shrtcts", quietly = TRUE)) {
  shrtcts::add_rstudio_shortcuts()
}
```

<span class="pkg">shrtcts</span> comes with a demonstration `.shrtcts.yaml` file
that you can use for inspiration.
Print out the example YAML file contents with:

```{r}
shrtcts::example_shortcuts_yaml()
```

### Shortcuts can be arbitrary R code

Your shortcut doesn't need to call a function in a package.
In fact,
you can create shortcuts that run R code
simply by putting the code you want to run in the `Binding` entry.

Here's an example shortcut that picks a number between 0 and 100.
(Great for playing _what number of am I think of?_)

```yaml
- Name: I'm thinking of a number...
  Binding: sample(0:100, 1)
```

Notice the binding is just R code
(I was thinking of `r sample(0:100, 1)`, by the way),
and the only fields you _need_ to include
are the `Name` and the `Binding`.

Your shortcuts don't need to fit on a single line either.
You can use
[multi-line literal-style YAML blocks](https://yaml-multiline.info/)
for your R code.
In other words, add `|` after `Binding` and then indent your R code.

Here's an example shortcut that I use occasionally
to create a temporary markdown file
so that I can test some markdown or R code
and have the file be thrown away when I exit my R session.

```yaml
- Name: New Temporary R Markdown Document
  Binding: |
    tmp <- tempfile(fileext = ".Rmd")
    rmarkdown::draft(
      tmp,
      template = "github_document",
      package = "rmarkdown",
      edit = FALSE
    )
    rstudioapi::navigateToFile(tmp)
  Interactive: false
```

## Behind the Scenes

How does this all work?
<span class="pkg">shrtcts</span> comes with a minimal addins registry
with one addin that browses to the help page `?add_rstudio_addins`.

When you run `add_rstudio_addins()`,
<span class="pkg">shrtcts</span> rewrites it's own addins registry
using your shortcut title and description.
It also assigns each shortcut in `.shrtcts.yaml`
to an id from 1 to 100,
which correspond to 100 shortcut functions
in the <span class="pkg">shrtcts</span> package.
Each addin is wired to one of these functions,
so when you run the associated addin
<span class="pkg">shrtcts</span> looks up the correct shortcut in your
`.shrtcts.yaml` file and runs that shortcut.

This why you need to run `add_rstudio_addins()`
whenever you add or modify _the order_ of your shortcuts.
Whenever this happens, <span class="pkg">shrtcts</span> has to re-wire
the addins registry to make sure everything is connect.

This is also why you need to restart your R session
for the addins to be seen by RStudio.
RStudio only checks for package addins when R starts up,
so the R session restart triggers RStudio to refresh the addin registry.

### Inspiration

<span class="pkg">shrtcts</span> was inspired by <span class="pkg">[rsam]</span>,
the _RStudio Addins Manager_ by [&commat;yonicd](https://github.com/yonicd).
There's a lot that <span class="pkg">rsam</span> can do ---
including helping you manage your keyboard shortcuts ---
and <span class="pkg">shrtcts</span> is essentially an extension of <span class="pkg">rsam</span>'s
[limited liability addins](https://github.com/yonicd/rsam#limited-liability-addins).
<span class="pkg">rsam</span> provides three slots for custom addins
that in turn look for specially-named functions defined in the global environment.
In the addins menu,
these three custom addins appear as
**lla1**, **lla2**, and **lla3**.
The upside of <span class="pkg">rsam</span>
is that you don't have to write code in YAML (huge plus!),
but the downside is that the names of the addins are fixed.

<span class="pkg">shrtcts</span>,
on the other hand,
rewrites its own addin registry so that you can have customized addin names and descriptions.
In both packages,
the number of custom addins is limited:
<span class="pkg">rsam</span> provides 3 slots,
while <span class="pkg">shrtcts</span> gives you 100.

## Share Your Shortcuts

Because <span class="pkg">shrtcts</span>
stores your shortcuts in stand-alone(-ish) YAML files,
you can share your shortcuts file with others (or yourself)
by posting it somewhere online,
for example as a [Github Gist](https://gist.github.com).

[Here's a small collection of shortcuts](https://gist.github.com/gadenbuie/140204f122240f397e68e610643a4190)
that I use and that inspired me to create this package
so that I didn't have to think of another package name.

I hope <span class="pkg">[shrtcts]</span> is helpful to you!
Find me on [&commat;grrrck](https://twitter.com/grrrck)
and let me know if it is.
