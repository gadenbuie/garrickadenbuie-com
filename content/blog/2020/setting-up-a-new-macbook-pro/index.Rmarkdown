---
title: Setting up a new MacBook Pro
author: Garrick Aden-Buie
date: '2020-12-01'
categories:
  - Blog
tags:
  - R
  - Tips
  - Programming
  - Tricks
  - Twitter
description: A big post with all the Mac apps and command line utilities I use everyday.
# twitterImage: /path/to/image.png
rmd_source: 'https://github.com/gadenbuie/garrickadenbuie-com/blob/main/content/blog/2020/setting-up-a-new-macbook-pro/index.Rmd'
keywords: rstats
editor_options:
  chunk_output_type: console
---

<!-- Links -->
[pak]: https://pak.r-lib.org
[tidyverse]: https://tidyverse.org

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE, warning = FALSE, message = FALSE,
  fig.width = 9, fig.height = 10
)
options(htmltools.dir.version = TRUE)

# If using lightbox for plots, set `fig.show = FALSE`
# Usage: lightbox_img(knitr::fig_chunk("chunk-name", "png"))
lightbox_img <- function(url, alt = "", caption = "", preview = TRUE) {
  if (preview) {
    glue::glue(
      '<a href="{url}" data-featherlight="image">
      <div class="figure">
      <img src="{url}" alt="{alt}">
      <p class="caption">{caption}</p>
      </div>
      </a>
      '
    )
  } else {
    if (alt == "") alt <- "static image of the plot"
    glue::glue('<a href="{url}" data-featherlight="image">{alt}</a>')
  }
}
```

```{r eval=FALSE}
library(rtweet)
first_tweet_id <- "1333804309272621060"
last_tweet_id <- "1333907891049402371"

lookup_thread <- function(status_id, tweets = NULL) {
  tweet <- rtweet::lookup_tweets(status_id)
  tweets <- dplyr::bind_rows(tweet, tweets)
  if (is.na(tweet$reply_to_status_id)) {
    return(tweets)
  } else {
    lookup_thread(tweet$reply_to_status_id, tweets)
  }
}

thread <- lookup_thread(last_tweet_id)
thread$text_markdown <- purrr::map_chr(thread$status_url, tweetrmd::tweet_markdown)
saveRDS(thread, "mac-install-tweet-thread.rds")
```

```{r}
library(tidyverse)
thread <- readRDS("mac-install-tweet-thread.rds")

lookup_urls <-
  bind_rows(
    thread %>%
      select(short = media_t.co, long = media_url) %>%
      unnest(everything()),
    thread %>%
      select(short = urls_t.co, long = urls_expanded_url) %>%
      unnest(everything())
  ) %>%
  drop_na()

tweet_plain_markdown <- function(x) {
  x <- sub("(\\[pic.+?)?\n>\n> --- Garrick.+$", "", x)
  x <- strsplit(x, "\n")[[1]]
  # clean blockquote markdown
  x <- sub("^> ", "", x)
  # twitter made this next one a linked URL but it shouldn't be
  x <- sub("<https://t.co/FsubHkjqKd>", "https://t.co/FsubHkjqKd", x, fixed = TRUE)
  # full inline links on new lines
  x <- gsub("([^ ])<http", "\\1  \n<http", x)
  # re-split because we may have added new lines
  x <- strsplit(paste(x, collapse = "\n"), "\n")[[1]]
  # this one thing should be inline code
  x <- sub("brew install \\<x\\>", "`brew install <x>`", x, fixed = TRUE)
  # code chunks
  x <- gsub("^\\s*(xcode|brew (cask|install|tap|search)|npm)(.+)$", "```\n\\1\\3\n```", x)
  x <- gsub("^\\s*(fish \\\\# to start|fisher install IlanCosman)(.+)$", "```\n\\1\\2\n```", x)
  # r code chunks
  x <- gsub("^\\s*(install\\.packages|pak::)(.+)$", "```r\n\\1\\2\n```", x)
  x <- paste(x, collapse = "\n")
  # collapse code chunks together
  gsub("```\n```r?", "", x)
}

prepend_status_url <- function(text_markdown, status_url, created_at) {
  ts <- as.POSIXct(created_at)
  paste0(
    '<span class="tweet-timestamp">',
    '<a class="tweet-link" href="', status_url, '" title="', created_at, '" target="_blank" rel="noopener noreferrer">',
    '<i class="fab fa-twitter fa-fw"></i>',
    '<span class="tweet-timestamp__text">',
    strftime(ts, "%I:%M%P", tz = "America/New_York"),
    '</span></a></span>',
    text_markdown
  )
}

append_images <- function(text_markdown, ext_media_url) {
  if (length(ext_media_url) == 1 && is.na(ext_media_url)) {
    return(text_markdown)
  }
  if (!dir.exists("img")) {
    dir.create("img")
  }
  for (ext_url in ext_media_url) {
    image_path <- file.path("img", basename(ext_url))
    if (!file.exists(image_path)) {
      download.file(ext_url, image_path)
    }
    text_markdown <- paste0(text_markdown, "\n\n![](", image_path, ")")
  }
  text_markdown
}

add_headings <- function(text_markdown, .row) {
  headings <- c(
    "1"  = "Upgrade to Big Sur",
    "11" = "Critical First Steps",
    "25" = "Install R and Friends",
    "36" = "Utility Mac Apps",
    "58" = "Command Line Utilities",
    "68" = "Fish Shell"
  )
  .row <- paste(.row)
  if (.row %in% names(headings)) {
    text_markdown <- paste0("\n\n## ", headings[.row], "\n\n", text_markdown)
  }
  text_markdown
}

thread_markdown <-
  thread %>%
  mutate(
    text_markdown = map_chr(text_markdown, tweet_plain_markdown),
    text_markdown = prepend_status_url(text_markdown, status_url, created_at),
    text_markdown = map2_chr(text_markdown, ext_media_url, append_images),
    text_markdown = imap(text_markdown, add_headings)
  ) %>%
  pull(text_markdown) %>%
  paste(collapse = "\n\n")

for (i in seq_len(nrow(lookup_urls))) {
  thread_markdown <- gsub(lookup_urls$short[[i]], lookup_urls$long[[i]], thread_markdown, fixed = TRUE)
}

# the markdown tweet text escapes some weird things that I need to unescape
thread_markdown <- gsub("\\\\([.\n<>_\"'`#~-])", "\\1", thread_markdown)
# but some __do__ need to be escaped
thread_markdown <- gsub("  \n", "  \\\n", thread_markdown)
thread_markdown <- sub("command line utility <x>", "command line utility `<x>`", thread_markdown)

# inline referenced tweets
thread_markdown <- stringr::str_replace_all(
    thread_markdown,
    pattern = "<https://twitter.com/.+?/status/\\d+?>",
    replacement = function(status_url) {
      paste0("\n\n", tweetrmd::tweet_markdown(gsub("^<|>$", "", status_url)), "\n")
    }
  )

# fix spelling mistakes and other small things
thread_markdown <- stringr::str_replace_all(
  thread_markdown,
  c(
    "Tog get" = "To get",
    "Big Sug" = "Big Sur",
    "(🍎.+?)\n" = "\\1  \n",
    "((↖️|↗️|↙️|↘️).+?)\n" = "\\1  \n",
    "(\\\\\\*reboots\\\\\\*)\n" = "\\1  \n",
    "\\{pak\\}" = "<span class="pkg">[pak]</span>",
    "\\{tidyverse\\}" = "<span class="pkg">[tidyverse]</span>"
  )
)
```

```{r}
xaringanExtra::use_clipboard()
```


```{css echo=FALSE}
.tweet-timestamp {
  display: block;
  font-size: 0.9em;
}
.tweet-timestamp a .tweet-timestamp__text {
  color: var(--text-light);
}
.tweet-timestamp a:hover .tweet-timestamp__text {
  color: var(--text-mild);
}
.tweet-timestamp .tweet-link > i {
	display: inline-block;
	padding-right: 1.5em;
}
```

::: lead

I had to set up my new work computer today and rather than just slog away at it, I thought I would live tweet the process.
Honestly, there's still a lot of config left to do, but the [tweet thread](https://twitter.com/grrrck/status/1333804309272621060) does a good job organizing the apps and software I use daily.
[My install notes](https://gist.github.com/gadenbuie/a14cab3d075901d8b25cbaf9e1f1fa7d) are another good summary.

I used [rtweet](https://docs.ropensci.org/rtweet) and [tweetrmd](https://github.com/gadenbuie/tweetrmd) to unroll the twitter thread.

- [Upgrade to Big Sur](#upgrade-to-big-sur)
- [Critical First Steps](#critical-first-steps)
- [Install R and Friends](#install-r-and-friends)
- [Utility Mac Apps](#utility-mac-apps)
- [Command Line Utilities](#command-line-utilities)
- [Fish Shell](#fish-shell)

:::


::: thread

`r thread_markdown`

:::